name: CI - Docker Build and Test

on:
  push:
    branches: ['**']  # Triggers on push to any branch
  pull_request:
    branches: [ '**' ]  # Triggers on PRs targeting any branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        run: echo "REPO_LOW=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          load: true  # Load image into local Docker context for testing
          tags: ghcr.io/${{ env.REPO_LOW }}:ci-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |  # Optional: Pass build args if needed (e.g., for multi-stage)
            NODE_ENV=test

      - name: Test Docker image healthcheck
        run: |
          # Run the container in detached mode with necessary env vars for healthcheck
          docker run -d \
            --name test-container \
            -e NODE_ENV=test \
            -e PORT=3000 \
            -p 3000:3000 \
            ghcr.io/${{ env.REPO_LOW }}:ci-${{ github.sha }}
          
          # Wait for startup and run healthcheck (mimics Dockerfile's HEALTHCHECK)
          sleep 10  # Give time for app to start
          docker exec test-container node healthcheck.js || (echo "Healthcheck failed" && exit 1)
          
          # Optional: Smoke test - curl the health endpoint if your app exposes one
          # curl -f http://localhost:3000/health || (echo "Smoke test failed" && exit 1)
          
          # Clean up
          docker stop test-container
          docker rm test-container

      - name: Push Docker image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Only on main branch pushes
        run: |
          docker tag ghcr.io/${{ env.REPO_LOW }}:ci-${{ github.sha }} ghcr.io/${{ env.REPO_LOW }}:latest
          docker tag ghcr.io/${{ env.REPO_LOW }}:ci-${{ github.sha }} ghcr.io/${{ env.REPO_LOW }}:sha-${{ github.sha }}
          docker push ghcr.io/${{ env.REPO_LOW }}:latest
          docker push ghcr.io/${{ env.REPO_LOW }}:sha-${{ github.sha }}

      - name: Notify on failure
        if: failure()
        run: |
          echo "Docker build or test failed! Check logs above."